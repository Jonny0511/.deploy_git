<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>洛谷p5788单调栈</title>
      <link href="/2024/11/02/%E6%B4%9B%E8%B0%B7p5788%E5%8D%95%E8%B0%83%E6%A0%88/"/>
      <url>/2024/11/02/%E6%B4%9B%E8%B0%B7p5788%E5%8D%95%E8%B0%83%E6%A0%88/</url>
      
        <content type="html"><![CDATA[<p>我的AC代码:</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stack&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"><span class="type">int</span> a[<span class="number">3000005</span>];</span><br><span class="line"><span class="type">int</span> f[<span class="number">3000005</span>];</span><br><span class="line">stack&lt;<span class="type">int</span>&gt;st;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;a[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=n;i&gt;=<span class="number">1</span>;i--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//比当前数小的都Pop掉了 留下了比当前数大的</span></span><br><span class="line">        <span class="comment">//也就是说 单调栈永远维护一个状态:数字越弹越大</span></span><br><span class="line">        <span class="keyword">while</span>(!st.<span class="built_in">empty</span>()&amp;&amp;a[st.<span class="built_in">top</span>()]&lt;=a[i])</span><br><span class="line">        &#123;</span><br><span class="line">            st.<span class="built_in">pop</span>();</span><br><span class="line">        &#125;</span><br><span class="line">        f[i]=st.<span class="built_in">empty</span>()?<span class="number">0</span>:st.<span class="built_in">top</span>();</span><br><span class="line">        st.<span class="built_in">push</span>(i);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,f[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>关于单调栈,我找了一篇不错的文章 你可以直接点进去:<br><a href="https://blog.csdn.net/zy_dreamer/article/details/131036101">点击跳转</a></p><div class="video-container">[视频内嵌代码]</div><style>.video-container { position: relative; padding-top: 56.25%; } .video-container iframe { position: absolute; top: 0; left: 0; width: 100%; height: 100%; }</style>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>吐泡泡算法题</title>
      <link href="/2024/11/02/%E5%90%90%E6%B3%A1%E6%B3%A1%E7%AE%97%E6%B3%95%E9%A2%98/"/>
      <url>/2024/11/02/%E5%90%90%E6%B3%A1%E6%B3%A1%E7%AE%97%E6%B3%95%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<p>这个题我是第二次才ac 第一遍没想到用栈来”瞻前” 因为是从左到右合嘛 第一遍的只过了百分之四十测试用例<br>第一次代码:(通过率40%)</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">//通过率40%</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line">string s;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">while</span>(cin&gt;&gt;s)</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//因为有多组数据</span></span><br><span class="line">list&lt;<span class="type">char</span>&gt; paopao;</span><br><span class="line"><span class="comment">//把这个字符串存到链表容器里面</span></span><br><span class="line"><span class="type">int</span> Length=s.<span class="built_in">length</span>();</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;Length;i++)</span><br><span class="line">&#123;</span><br><span class="line">    paopao.<span class="built_in">push_back</span>(s[i]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//开始遍历list容器</span></span><br><span class="line"><span class="comment">//ooOOoooO</span></span><br><span class="line">list&lt;<span class="type">char</span>&gt;::iterator p1;</span><br><span class="line">p1=paopao.<span class="built_in">begin</span>();</span><br><span class="line"><span class="keyword">while</span>(p1!=paopao.<span class="built_in">end</span>())</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(*p1==<span class="string">&#x27;o&#x27;</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//因为是从左到右合并 所以要先看前驱再看后继</span></span><br><span class="line"><span class="comment">//o不需要看前驱 因为前面是O则没必要 前面不会存在o因为是从左到右遍历，若有小o一定会先结合成O</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//看后继</span></span><br><span class="line">p1++;</span><br><span class="line"><span class="keyword">if</span>(p1==paopao.<span class="built_in">end</span>()) <span class="keyword">continue</span>;</span><br><span class="line"><span class="keyword">if</span>(*p1==<span class="string">&#x27;o&#x27;</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//两个o变O</span></span><br><span class="line">*p1=<span class="string">&#x27;O&#x27;</span>;</span><br><span class="line">list&lt;<span class="type">char</span>&gt;::iterator p2;</span><br><span class="line">p2=p1;</span><br><span class="line">p1--;</span><br><span class="line">paopao.<span class="built_in">erase</span>(p1);</span><br><span class="line">p1=p2;</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(*p1==<span class="string">&#x27;O&#x27;</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(*p1==<span class="string">&#x27;O&#x27;</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//看前驱</span></span><br><span class="line"><span class="keyword">if</span>(p1!=paopao.<span class="built_in">begin</span>())</span><br><span class="line">&#123;</span><br><span class="line">p1--;</span><br><span class="line"><span class="keyword">if</span>(*p1==<span class="string">&#x27;O&#x27;</span>)</span><br><span class="line">&#123;</span><br><span class="line">list&lt;<span class="type">char</span>&gt;::iterator p2;</span><br><span class="line">p2=p1;</span><br><span class="line">p1++;</span><br><span class="line">paopao.<span class="built_in">erase</span>(p2);</span><br><span class="line">p2=p1;</span><br><span class="line">p1++;</span><br><span class="line">paopao.<span class="built_in">erase</span>(p2);</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(*p1==<span class="string">&#x27;o&#x27;</span>)</span><br><span class="line">&#123;</span><br><span class="line">p1++;</span><br><span class="line"><span class="comment">//看了前驱后的看后继</span></span><br><span class="line"><span class="comment">//如果被删除了 那么也不会运行此段代码</span></span><br><span class="line">p1++;</span><br><span class="line"><span class="keyword">if</span>(p1==paopao.<span class="built_in">end</span>()) <span class="keyword">continue</span>;</span><br><span class="line"><span class="comment">//和后继节点的O抵消</span></span><br><span class="line"><span class="keyword">if</span>(*p1==<span class="string">&#x27;O&#x27;</span>)</span><br><span class="line">&#123;</span><br><span class="line">list&lt;<span class="type">char</span>&gt;::iterator p2;</span><br><span class="line">p2=p1;</span><br><span class="line">p1--;</span><br><span class="line">paopao.<span class="built_in">erase</span>(p1);</span><br><span class="line">p1=p2;</span><br><span class="line">p1++;</span><br><span class="line">paopao.<span class="built_in">erase</span>(p2);</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//后继节点是o</span></span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(*p1==<span class="string">&#x27;o&#x27;</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//把指针指向这个小o然后继续遍历</span></span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//看不了前驱后的看后继</span></span><br><span class="line"><span class="comment">//即p1==paopao.begin()</span></span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line"><span class="comment">//直接看后继</span></span><br><span class="line">p1++;</span><br><span class="line"><span class="keyword">if</span>(p1==paopao.<span class="built_in">end</span>()) <span class="keyword">continue</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(*p1==<span class="string">&#x27;O&#x27;</span>)</span><br><span class="line">&#123;</span><br><span class="line">list&lt;<span class="type">char</span>&gt;::iterator p2;</span><br><span class="line">p2=p1;</span><br><span class="line">p1--;</span><br><span class="line">paopao.<span class="built_in">erase</span>(p1);</span><br><span class="line">p1=p2;</span><br><span class="line">p1++;</span><br><span class="line">paopao.<span class="built_in">erase</span>(p2);</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(*p1==<span class="string">&#x27;o&#x27;</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(list&lt;<span class="type">char</span>&gt;::iterator i=paopao.<span class="built_in">begin</span>();i!=paopao.<span class="built_in">end</span>();i++)</span><br><span class="line">&#123;</span><br><span class="line">cout&lt;&lt;*i;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">cout&lt;&lt;endl;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>其实可以把栈给利用起来<br>就是每遍历下一个泡泡 就遍历栈顶的元素 如果是小o就直接变成大O<br>因为是从左到右合并 所以左边的会自动与右边的合并 这个时候别着急把大O进栈 而是先看栈顶元素<br>那么此时情况分两种:<br>1,小o 直接把O进栈<br>2,大O 两个大O直接爆 直接出栈栈顶元素 目前遍历到的大O也作废了嘛 for循环遍历下一个泡泡<br>这样做可以满分通过:</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//时间复杂度O(n)</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="comment">//本题和括号序列匹配本质一致 主要依赖栈的数据结构实现</span></span><br><span class="line">stack&lt;<span class="type">char</span>&gt; st,tmp;</span><br><span class="line"><span class="comment">//ooOOoooO</span></span><br><span class="line"><span class="comment">//栈  ch</span></span><br><span class="line"><span class="comment">//o</span></span><br><span class="line"><span class="comment">//o   o</span></span><br><span class="line"><span class="comment">//O</span></span><br><span class="line"><span class="comment">//O   O</span></span><br><span class="line"><span class="comment">//O</span></span><br><span class="line"><span class="comment">//O   o</span></span><br><span class="line"><span class="comment">//Oo</span></span><br><span class="line"><span class="comment">//Oo  o</span></span><br><span class="line"><span class="comment">//O   O</span></span><br><span class="line"><span class="comment">//    O</span></span><br><span class="line"><span class="comment">//o</span></span><br><span class="line"><span class="comment">//o   O</span></span><br><span class="line"><span class="comment">//oO</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    string s;</span><br><span class="line">    <span class="comment">//多组数据</span></span><br><span class="line">    <span class="keyword">while</span>(cin&gt;&gt;s)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> len=s.<span class="built_in">length</span>();</span><br><span class="line">        <span class="comment">//开始遍历单次输入的字符串</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;len;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="type">char</span> ch=s[i];</span><br><span class="line">            <span class="comment">//把字符入栈</span></span><br><span class="line">            <span class="comment">//栈空</span></span><br><span class="line">            <span class="keyword">if</span>(st.<span class="built_in">empty</span>())</span><br><span class="line">            &#123;</span><br><span class="line">                st.<span class="built_in">push</span>(ch);</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//栈非空</span></span><br><span class="line">            <span class="type">char</span> top=st.<span class="built_in">top</span>();<span class="comment">//获取栈顶元素</span></span><br><span class="line">            <span class="comment">//分情况处理</span></span><br><span class="line">            <span class="type">bool</span> flag= <span class="literal">false</span>;</span><br><span class="line">            <span class="keyword">while</span>(top==ch)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="comment">//两个小o变成一个大O 然后入栈</span></span><br><span class="line">                <span class="keyword">if</span>(ch==<span class="string">&#x27;o&#x27;</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    st.<span class="built_in">pop</span>();</span><br><span class="line">                    ch=<span class="string">&#x27;O&#x27;</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="comment">//两个大O</span></span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="comment">//发生爆炸</span></span><br><span class="line">                    st.<span class="built_in">pop</span>();</span><br><span class="line">                    flag=<span class="literal">true</span>;<span class="comment">//表示当前遍历位置ch已经失效 无需在下一次循环之前入栈</span></span><br><span class="line">                    <span class="keyword">break</span>;<span class="comment">//break掉while循环 ch已无价值 继续进行for循环下一个字符的遍历</span></span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span>(st.<span class="built_in">empty</span>()) <span class="keyword">break</span>;</span><br><span class="line">                <span class="comment">//更新top的值 以继续while循环</span></span><br><span class="line">                top=st.<span class="built_in">top</span>();</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//没有发生爆炸</span></span><br><span class="line">            <span class="keyword">if</span>(!flag)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="comment">//入栈</span></span><br><span class="line">                st.<span class="built_in">push</span>(ch);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//然后就可以输出单论的答案</span></span><br><span class="line">        <span class="comment">//注意 栈输出出来是倒着的 所以要先翻转</span></span><br><span class="line">        <span class="comment">//顺便清空原本的栈</span></span><br><span class="line">        <span class="keyword">while</span>(!st.<span class="built_in">empty</span>())</span><br><span class="line">        &#123;</span><br><span class="line">            tmp.<span class="built_in">push</span>(st.<span class="built_in">top</span>());</span><br><span class="line">            st.<span class="built_in">pop</span>();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//输出结果</span></span><br><span class="line">        <span class="keyword">while</span>(!tmp.<span class="built_in">empty</span>())</span><br><span class="line">        &#123;</span><br><span class="line">            cout&lt;&lt;tmp.<span class="built_in">top</span>();</span><br><span class="line">            tmp.<span class="built_in">pop</span>();</span><br><span class="line">        &#125;</span><br><span class="line">        cout&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><div class="video-container">[视频内嵌代码]</div><style>.video-container { position: relative; padding-top: 56.25%; } .video-container iframe { position: absolute; top: 0; left: 0; width: 100%; height: 100%; }</style>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>后缀表达式求值</title>
      <link href="/2024/11/02/%E5%90%8E%E7%BC%80%E8%A1%A8%E8%BE%BE%E5%BC%8F%E6%B1%82%E5%80%BC/"/>
      <url>/2024/11/02/%E5%90%8E%E7%BC%80%E8%A1%A8%E8%BE%BE%E5%BC%8F%E6%B1%82%E5%80%BC/</url>
      
        <content type="html"><![CDATA[<p>原题链接:<a href="https://ac.nowcoder.com/acm/problem/212914">跳转点此</a><br>我的代码:</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">getNum</span><span class="params">(string s)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    stack&lt;<span class="type">int</span>&gt; exp;</span><br><span class="line">    <span class="type">int</span> len=s.<span class="built_in">length</span>();</span><br><span class="line">    <span class="type">int</span> i=<span class="number">0</span>;</span><br><span class="line"><span class="comment">//    &quot;12#3#+15#*&quot;</span></span><br><span class="line"><span class="comment">//12#3#+15#*</span></span><br><span class="line"><span class="comment">//12</span></span><br><span class="line"><span class="comment">//15 15</span></span><br><span class="line"><span class="comment">//15*15</span></span><br><span class="line">    <span class="keyword">while</span>(i&lt;len)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(s[i]==<span class="string">&#x27;.&#x27;</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            i++;</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(s[i]==<span class="string">&#x27;+&#x27;</span>||s[i]==<span class="string">&#x27;-&#x27;</span>||s[i]==<span class="string">&#x27;*&#x27;</span>||s[i]==<span class="string">&#x27;/&#x27;</span>)&#123;</span><br><span class="line">            <span class="comment">//加法运算</span></span><br><span class="line">            <span class="keyword">if</span>(s[i]==<span class="string">&#x27;+&#x27;</span>&amp;&amp;!exp.<span class="built_in">empty</span>())</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="comment">//出栈两个元素</span></span><br><span class="line">                <span class="type">int</span> num1=exp.<span class="built_in">top</span>();</span><br><span class="line">                exp.<span class="built_in">pop</span>();</span><br><span class="line">                <span class="type">int</span> num2=exp.<span class="built_in">top</span>();</span><br><span class="line">                exp.<span class="built_in">pop</span>();</span><br><span class="line">                <span class="type">int</span> sum=num1+num2;</span><br><span class="line">                exp.<span class="built_in">push</span>(sum);</span><br><span class="line">                i++;</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line">                <span class="comment">//减法运算</span></span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(s[i]==<span class="string">&#x27;-&#x27;</span>&amp;&amp;!exp.<span class="built_in">empty</span>())</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="type">int</span> num1=exp.<span class="built_in">top</span>();</span><br><span class="line">                exp.<span class="built_in">pop</span>();</span><br><span class="line">                <span class="type">int</span> num2=exp.<span class="built_in">top</span>();</span><br><span class="line">                exp.<span class="built_in">pop</span>();</span><br><span class="line">                <span class="type">int</span> dif=num2-num1;<span class="comment">//顺序不要乱！</span></span><br><span class="line">                exp.<span class="built_in">push</span>(dif);</span><br><span class="line">                i++;</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line">                <span class="comment">//成发运算</span></span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(s[i]==<span class="string">&#x27;*&#x27;</span>&amp;&amp;!exp.<span class="built_in">empty</span>())</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="type">int</span> num1=exp.<span class="built_in">top</span>();</span><br><span class="line">                exp.<span class="built_in">pop</span>();</span><br><span class="line">                <span class="type">int</span> num2=exp.<span class="built_in">top</span>();</span><br><span class="line">                exp.<span class="built_in">pop</span>();</span><br><span class="line">                <span class="type">int</span> pro=num1*num2;</span><br><span class="line">                exp.<span class="built_in">push</span>(pro);</span><br><span class="line">                i++;</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line">                <span class="comment">//除法运算</span></span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(s[i]==<span class="string">&#x27;/&#x27;</span>&amp;&amp;!exp.<span class="built_in">empty</span>())</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="type">int</span> num1=exp.<span class="built_in">top</span>();</span><br><span class="line">                exp.<span class="built_in">pop</span>();</span><br><span class="line">                <span class="type">int</span> num2=exp.<span class="built_in">top</span>();</span><br><span class="line">                exp.<span class="built_in">pop</span>();</span><br><span class="line">                <span class="type">int</span> com=num2/num1;<span class="comment">//这里会自动取整但是题目要求也是这样</span></span><br><span class="line">                exp.<span class="built_in">push</span>(com);</span><br><span class="line">                i++;</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="comment">//是数字</span></span><br><span class="line">            <span class="comment">//字符串初始值为空</span></span><br><span class="line">            string num=<span class="string">&quot;&quot;</span>;</span><br><span class="line">            <span class="keyword">while</span>(i&lt;len&amp;&amp;s[i]&gt;=<span class="string">&#x27;0&#x27;</span>&amp;&amp;s[i]&lt;=<span class="string">&#x27;9&#x27;</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                num.<span class="built_in">push_back</span>(s[i]);</span><br><span class="line">                i++;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(!num.<span class="built_in">empty</span>())</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="comment">//类型转换</span></span><br><span class="line">                <span class="type">int</span> number=<span class="built_in">stoi</span>(num);</span><br><span class="line">                <span class="comment">//入栈</span></span><br><span class="line">                exp.<span class="built_in">push</span>(number);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">int</span> ans=exp.<span class="built_in">top</span>();</span><br><span class="line">    exp.<span class="built_in">pop</span>();</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    string s;</span><br><span class="line">    cin&gt;&gt;s;</span><br><span class="line">    string str=<span class="string">&quot;&quot;</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;s.<span class="built_in">length</span>();i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(s[i]!=<span class="string">&#x27;@&#x27;</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            str+=s[i];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(s[i]==<span class="string">&#x27;@&#x27;</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="type">int</span> ans=<span class="built_in">getNum</span>(str);</span><br><span class="line">            cout&lt;&lt;ans&lt;&lt;<span class="string">&quot;\n&quot;</span>;</span><br><span class="line">            <span class="comment">//清空字符串再继续遍历下一个表达式串</span></span><br><span class="line">            str=<span class="string">&quot;&quot;</span>;</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="comment">//3.5.2.-*7.+@10.28.30./*7.-@</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>本题主要考察栈的应用 我这个是第一遍写的直接ac没再管 所以就代码比较复杂 其实优化一下不需要这么多行</p><div class="video-container">[视频内嵌代码]</div><style>.video-container { position: relative; padding-top: 56.25%; } .video-container iframe { position: absolute; top: 0; left: 0; width: 100%; height: 100%; }</style>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>洛谷P1083跳教室</title>
      <link href="/2024/11/02/%E6%B4%9B%E8%B0%B7P1083%E8%B7%B3%E6%95%99%E5%AE%A4/"/>
      <url>/2024/11/02/%E6%B4%9B%E8%B0%B7P1083%E8%B7%B3%E6%95%99%E5%AE%A4/</url>
      
        <content type="html"><![CDATA[<p>原题跳转链接<a href="https://www.luogu.com.cn/problem/P1083">点击此处跳转洛谷</a><br>下面是我写的代码:</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//前缀和数组</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">int</span> n,m;</span><br><span class="line"><span class="type">int</span> r[<span class="number">1000005</span>];</span><br><span class="line"><span class="type">int</span> d[<span class="number">1000005</span>],s[<span class="number">1000005</span>],t[<span class="number">1000005</span>];</span><br><span class="line"><span class="type">long</span> <span class="type">long</span> sum[<span class="number">1000005</span>]=&#123;<span class="number">0</span>&#125;;<span class="comment">//前缀和数组</span></span><br><span class="line"><span class="comment">//4 3</span></span><br><span class="line"><span class="comment">//2 5 4 3</span></span><br><span class="line"><span class="comment">//2 1 3</span></span><br><span class="line"><span class="comment">//3 2 4</span></span><br><span class="line"><span class="comment">//4 2 4</span></span><br><span class="line"><span class="comment">//前缀和数组的维护过程:</span></span><br><span class="line"><span class="comment">//sum[1]=2</span></span><br><span class="line"><span class="comment">//sum[2]=3</span></span><br><span class="line"><span class="comment">//sum[2]=7</span></span><br><span class="line"><span class="comment">//sum[3]=sum[2]+sum[3]=7+0=7</span></span><br><span class="line"><span class="comment">//sum4=sum3+sum4-d1=0+7-2=5</span></span><br><span class="line"><span class="comment">//本题前缀和数组记录某天一共需要教室的数量 但是常规构建该数组的时间复杂度为n^2 利用前缀和思想 时间复杂度为n</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cin&gt;&gt;n&gt;&gt;m;</span><br><span class="line">    <span class="comment">//第i天可供租借教室的数量</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        cin&gt;&gt;r[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=m;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        cin&gt;&gt;d[i]&gt;&gt;s[i]&gt;&gt;t[i];</span><br><span class="line">        sum[s[i]]+=d[i];</span><br><span class="line">        sum[t[i]<span class="number">+1</span>]-=d[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//时间复杂度 n*m&lt;=n^2</span></span><br><span class="line">    <span class="type">int</span> rejectNum=<span class="number">1e9</span>;<span class="comment">//存放需要重新申请的订单号在1到m之间不超过10的6次方</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        sum[i]+=sum[i<span class="number">-1</span>];</span><br><span class="line">        <span class="keyword">if</span>(sum[i]&gt;r[i])</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="type">long</span> <span class="type">long</span> ans=sum[i];</span><br><span class="line">            <span class="type">int</span> j;</span><br><span class="line">            <span class="keyword">for</span>(j=m;j&gt;=<span class="number">1</span>;j--)</span><br><span class="line">            &#123;</span><br><span class="line">                ans-=d[j];</span><br><span class="line">                <span class="keyword">if</span>(ans&lt;=r[i]) <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//则需要停止教室的分配 这是题干要求 所以要输出第一个导致不能满足要求的申请人</span></span><br><span class="line">            rejectNum=<span class="built_in">min</span>(rejectNum,j);</span><br><span class="line">            <span class="keyword">if</span>(rejectNum==<span class="number">1</span>) <span class="keyword">break</span>;<span class="comment">//不需要再遍历了 第一份订单就发通知单了 相当于剪枝</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(rejectNum==<span class="number">1e9</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        cout&lt;&lt;<span class="number">0</span>&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        cout&lt;&lt;<span class="number">-1</span>&lt;&lt;endl;</span><br><span class="line">        cout&lt;&lt;rejectNum&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>本题的考察点是前缀和数组<br>我们要做的就是维护前缀和数组+二分查找优化查找时间复杂度<br>因为本题用for循环时间复杂度会比较高</p><div class="video-container">[视频内嵌代码]</div><style>.video-container { position: relative; padding-top: 56.25%; } .video-container iframe { position: absolute; top: 0; left: 0; width: 100%; height: 100%; }</style>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>贪吃蛇-蛇王大战</title>
      <link href="/2024/11/02/%E8%B4%AA%E5%90%83%E8%9B%87-%E8%9B%87%E7%8E%8B%E5%A4%A7%E6%88%98/"/>
      <url>/2024/11/02/%E8%B4%AA%E5%90%83%E8%9B%87-%E8%9B%87%E7%8E%8B%E5%A4%A7%E6%88%98/</url>
      
        <content type="html"><![CDATA[<p>please:<a href="https://demo1-2grb8pa960fc3d4c-1324689237.tcloudbaseapp.com/tan/index.html">开始游戏</a></p><div class="video-container">[视频内嵌代码]</div><style>.video-container { position: relative; padding-top: 56.25%; } .video-container iframe { position: absolute; top: 0; left: 0; width: 100%; height: 100%; }</style>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>猜数字小游戏</title>
      <link href="/2024/11/01/%E7%8C%9C%E6%95%B0%E5%AD%97%E5%B0%8F%E6%B8%B8%E6%88%8F/"/>
      <url>/2024/11/01/%E7%8C%9C%E6%95%B0%E5%AD%97%E5%B0%8F%E6%B8%B8%E6%88%8F/</url>
      
        <content type="html"><![CDATA[<p>please：<a href="https://demo1-2grb8pa960fc3d4c-1324689237.tcloudbaseapp.com/">点击开始游戏</a></p><div class="video-container">[视频内嵌代码]</div><style>.video-container { position: relative; padding-top: 56.25%; } .video-container iframe { position: absolute; top: 0; left: 0; width: 100%; height: 100%; }</style>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>算法数据结构—关于单调栈</title>
      <link href="/2024/11/01/%E7%AE%97%E6%B3%95%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84-%E5%85%B3%E4%BA%8E%E5%8D%95%E8%B0%83%E6%A0%88/"/>
      <url>/2024/11/01/%E7%AE%97%E6%B3%95%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84-%E5%85%B3%E4%BA%8E%E5%8D%95%E8%B0%83%E6%A0%88/</url>
      
        <content type="html"><![CDATA[<p>单调栈是一种特殊的数据结构，分为单调递增栈和单调递减栈，保证元素从栈顶到栈底的单调性。文章通过实例介绍了单调栈的入栈和出栈过程，并阐述了如何利用单调栈在$O(n)$的时间复杂度内寻找元素左右侧的特定元素。单调栈常用于寻找序列中某些元素的相邻元素，如左侧第一个更大&#x2F;更小的元素等。文章还提供了具体的编程模板和实际问题的解题思路，如下一个更大元素问题和每日温度问题。<br>详解跳转csdn链接: <a href="https://blog.csdn.net/zy_dreamer/article/details/131036101">点击跳转</a></p><div class="video-container">[视频内嵌代码]</div><style>.video-container { position: relative; padding-top: 56.25%; } .video-container iframe { position: absolute; top: 0; left: 0; width: 100%; height: 100%; }</style>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>毒液-最后一舞解析</title>
      <link href="/2024/11/01/%E6%AF%92%E6%B6%B2%E8%BF%8E%E6%9D%A5%E6%9C%80%E5%90%8E%E4%B8%80%E8%88%9E/"/>
      <url>/2024/11/01/%E6%AF%92%E6%B6%B2%E8%BF%8E%E6%9D%A5%E6%9C%80%E5%90%8E%E4%B8%80%E8%88%9E/</url>
      
        <content type="html"><![CDATA[<p>有人问，是否需要事前补作业才能去买票观影，其实没必要。</p><p>整体的讲述方式很简单，不需要太多的背景介绍也能看懂，非常模式化的流水线剧情，基本不存在太大的理解障碍。</p><p>还记得当年写《毒液》影评时，就提及我对于漫威电影的评价基础，几乎都是三星半的水平上下浮动。</p><p>极大超出预期的，能给到四星甚至五星，比如《银河护卫队3》。</p><p>低于预期则会降至三颗星，但除非剧情真的烂到极致，否则也很少出现打两颗的情况。</p><p>毕竟基础项摆在那里，单是视效和技术也能凑到及格分。</p><p>虽然票房已经飙到了3亿+，但我当时去的场次真的很冷清，大概是因为看得太早，全场加我在内仅有3人。</p><p>映前广告也只有一个，播完就迅速进入正片。</p><p>接下来，叶秋臣将会把自己在观影过程中认为比较重要的信息进行深度解析，尤其是关于毒液复活的伏笔。</p><p>不会延展太多到MCU（漫威电影宇宙），请小白们放心观看。</p><p>以下涉及海量剧透，请未观影者慎入。</p><p>1.关于剧情</p><p>相比《毒液2》来说，《毒液：最后一舞》的格局要更大一些，引出超级反派纳尔（Knull，感兴趣的可以去查查瑞典语是啥意思），共生体之神。不仅样貌与灭霸非常相似，战力也可与之媲美。</p><p>全程没有出场与共生体联盟正面PK，都是小弟们异噬体代劳。</p><p>2.关于角色</p><p>埃迪还是一如既往的颓废，除了进赌场时那一身光鲜亮丽的西装，其余时刻均为慵懒风。</p><p>毒液还是一如既往爱吃脑袋，比如对囚禁狗狗们的坏蛋就进行了疯狂啃食。</p><p>对于反英雄类型的主角，且性格里有些坏和痞的成分，那么个人魅力的加成就显得极为重要，否则很难征服观众。</p><p>喜欢毒液的人，应该也会喜欢死侍，因为他俩的嘴都很碎。</p><p>片尾彩蛋共两个，别错过。</p><p>我所在的厅观影体验不太好，彩蛋1播完就开了灯，导致彩蛋2看得非常模糊，而且中途还有保洁人员来回走动，挺无奈的。</p><p>所以叶秋臣只能尽力去描述当时自己看到的画面，如有不同的看法，欢迎补充沟通和交流。</p><p>第一个在正片结束后不久就放出来了，即纳尔持续叫嚣放狠话，等待着未来大爆发，黑暗之王就此觉醒要来主宰世界了。</p><p>第二个要等到全部字幕结束才出现（极度考验耐心，建议刷手机消磨时间），长头发酒吧打工仔从废墟走出来，逐渐跑向远方。接着就是近景里，蟑螂爬进了此前他们收集共生体碎片才用到的透明玻璃管中。</p><p>在传送门酒吧里，我们看到研究中心收集了毒液的病毒脱落，即毒液身体的一部分，这个部分的留存就是在为大结局的彩蛋2埋下伏笔。</p><div class="video-container">[视频内嵌代码]</div><style>.video-container { position: relative; padding-top: 56.25%; } .video-container iframe { position: absolute; top: 0; left: 0; width: 100%; height: 100%; }</style>]]></content>
      
      
      <categories>
          
          <category> 生活 </category>
          
      </categories>
      
      
    </entry>
    
    
  
  
</search>
